const { getSimSimiResponse } = require("../utils/simi-api");

module.exports = async function handleSimi(msg, sock, args) {
  // Verifica se a vari√°vel simiAtivo est√° ativa. Isso pode ser feito diretamente do bot.js, j√° que √© o que controla isso.
  // Se n√£o estiver ativo, n√£o responde.
  const question = msg.message ? msg.message.text.trim() : '';  // Obt√©m o texto da mensagem do usu√°rio

  if (simiAtivo && question) {
    try {
      const response = await getSimSimiResponse(question);  // Envia a mensagem para a API SimSimi
      await sendMessageWithReaction(msg, sock, response + `\n\n`, "üê•");  // Responde com a mensagem da API SimSimi
    } catch (error) {
      await sendMessageWithReaction(msg, sock, `*Erro ao se comunicar com a API SimSimi:* ${error.message}\n\n`, "‚ùå");
    }
  }
};

// Fun√ß√£o para enviar a mensagem com rea√ß√£o
async function sendMessageWithReaction(msg, sock, text, emoji) {
  await sock.sendMessage(msg.key.remoteJid, { text: `${text}\n\n` });  // Envia a mensagem para o chat
  await sock.sendMessage(msg.key.remoteJid, { react: { text: emoji, key: msg.key } });  // Reage √† mensagem
}
